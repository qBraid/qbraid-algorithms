[tox]
minversion = 4.2.0
envlist =
    unit-tests
    docs
    linters
    format-check
skip_missing_interpreter = true

[testenv]
commands_pre = python -m pip install .
basepython = python3

[testenv:unit-tests]
description = Run pytests and generate coverage report.
deps = -r{toxinidir}/requirements-test.txt
commands =
    pytest tests --cov=qbraid_algorithms --cov-config=pyproject.toml --cov-report=term --cov-report=xml {posargs}

[testenv:docs]
description = Use sphinx to build the HTML docs.
deps = -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build -W -b html docs/ docs/build/html {posargs}

[testenv:isort]
envdir = .tox/linters
skip_install = true
deps = isort
commands =
    isort {posargs} qbraid_algorithms tests bin

[testenv:pylint]
envdir = .tox/linters
skip_install = true
deps = pylint
commands =
    pylint {posargs} qbraid_algorithms tests bin

[testenv:ruff]
envdir = .tox/linters
skip_install = true
deps = ruff
commands =
    ruff check qbraid_algorithms tests bin {posargs}

[testenv:mypy]
envdir = .tox/linters
skip_install = true
deps = mypy
commands =
    mypy qbraid_algorithms

[testenv:headers]
envdir = .tox/linters
skip_install = true
deps = qbraid-cli>=0.10.6,<0.11.0
commands =
    qbraid admin headers qbraid_algorithms tests bin --type=apache {posargs}

[testenv:linters]
allowlist_externals = qbraid
envdir = .tox/linters
skip_install = true
deps =
    {[testenv:isort]deps}
    {[testenv:ruff]deps}
    {[testenv:headers]deps}
commands =
    {[testenv:isort]commands}
    {[testenv:ruff]commands} {posargs:--fix}
    {[testenv:headers]commands} {posargs:--fix}

[testenv:format-check]
allowlist_externals = qbraid
envdir = .tox/linters
skip_install = true
deps =
    {[testenv:pylint]deps}
    {[testenv:isort]deps}
    {[testenv:ruff]deps}
    {[testenv:mypy]deps}
    {[testenv:headers]deps}
commands =
    {[testenv:pylint]commands}
    {[testenv:isort]commands} {posargs:--check-only}
    {[testenv:ruff]commands} {posargs:--diff}
    {[testenv:mypy]commands}
    {[testenv:headers]commands}