# Copyright 2025 qBraid
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: CI

on:
  pull_request:
    branches: ['main']
    types: [opened, reopened, ready_for_review, synchronize]
  push:
    branches: ['main']
  workflow_dispatch:

jobs:
  build:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Upgrade pip and install build tools
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel build
      - name: Build the package
        run: |
          python -m build
      - name: Upload built package
        uses: actions/upload-artifact@v4
        with:
          name: built-package
          path: dist/*.whl

  test:
    if: github.event.pull_request.draft == false
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.11', '3.12', '3.13']

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
      - name: Download built package
        uses: actions/download-artifact@v4
        with:
          name: built-package
          path: dist
      - name: Install package
        run: |
          if ($env:RUNNER_OS -eq "Windows") {
            Get-ChildItem dist/*.whl | ForEach-Object { pip install $_.FullName }
          } else {
            pip install dist/*.whl
          }
        shell: pwsh
      - name: Install testing dependencies
        run: |
          pip install tox
      - name: Run tests with pytest
        run: |
          tox -e unit-tests
      - name: Upload coverage reports to Codecov
        if: matrix.python-version == '3.12' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          files: ./build/coverage/coverage.xml
          verbose: true
